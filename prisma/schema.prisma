// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String   @id @default(uuid())
  username       String   @unique @db.VarChar(65)
  password       String
  golferUsername String   @unique @db.VarChar(65)
  golferPassword String
  tickets        Ticket[]
  createdAt      DateTime @default(now())
  isAdmin        Boolean  @default(false)

  @@map(name: "users")
}

model Ticket {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  status    String   @default("searching")
  comment   String?
  courses   Int[]
  date      String
  startTime String
  endTime   String
  min       Int
  max       Int
  p07       Boolean  @default(false)
  createdAt DateTime @default(now())
  searches  Search[]
  attempt   Int      @default(0)

  @@map(name: "tickets")
}

model Search {
  id        Int       @id @default(autoincrement())
  ticket    Ticket    @relation(fields: [ticketId], references: [id])
  ticketId  Int
  comments  String?
  status    String?
  response  Response?
  createdAt DateTime  @default(now())




  @@map(name: "searches")
}

model Response {
  id                           Int      @id @default(autoincrement())
  ReservationName              String
  Location                     String
  ScheduledTime                String
  NumberOfPlayers              Int
  ReservationFee               String
  TotalPrice                   String
  CancellationDeadline         String
  ConfirmationNumber           String
  IsSuccessful                 Boolean
  StatusText                   String
  SponsorName                  String
  CourseName                   String
  City                         String
  State                        String
  Country                      String
  OrderID                      String
  Tax                          String
  SKU                          String
  ProductName                  String
  UnitPrice                    String
  Quantity                     Int
  CaptainTeeTimeConflicts      Boolean?
  CaptainTeeTimeConflictsFound Boolean
  CaptainTeeTimeConflictMode   Int
  PartnerTeeTimeConflicts      Boolean?
  PartnerTeeTimeConflictsFound Boolean
  PartnerTeeTimeConflictMode   Int
  searches                     Search   @relation(fields: [searchId], references: [id])
  searchId                     Int

  @@map(name: "responses")
}
